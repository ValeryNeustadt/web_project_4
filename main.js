!function(){"use strict";class e{constructor(e,t,s,r,o){this._name=e.name,this._link=e.link,this._id=e._id,this._cardOwnerId=e.owner._id,this._likes=e.likes,this._handleCardClick=t,this._handleCardDelete=s,this._handleToggleLikes=r,this._userId=o._id}_getTemplate(){return document.querySelector("#gallery").content.querySelector(".element").cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._element.id=this._id,this._trashButton=this._element.querySelector(".element__trash-button"),this._likeButton=this._element.querySelector(".element__button-like"),this._imageElement=this._element.querySelector(".element__photo"),this._imageText=this._element.querySelector(".element__text"),this._likeNumber=this._element.querySelector(".element__number-like"),this._showLikesNumber(),this.isLiked()&&this.toggleLikeButton(this._likes),this._imageText.textContent=this._name,this._imageElement.src=this._link,this._imageElement.alt=`Photo of ${this._link}`,this._setEventListeners(this._id),this._showTrashButton(),this._element}_showLikesNumber(){this._likes.length>0?this._likeNumber.textContent=this._likes.length:this._likeNumber.textContent=""}_showTrashButton(){this._cardOwnerId===this._userId&&this._trashButton.classList.add("element__trash-button_visible")}_setEventListeners(){this._trashButton.addEventListener("click",(()=>{this._handleCardDelete(this._element.id)})),this._likeButton.addEventListener("click",(()=>{this._handleToggleLikes(this._element.id)})),this._imageElement.addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}removeElement(){this._element.remove(),this._element=null}toggleLikeButton(e){this._likes=e,this._showLikesNumber(),this._likeButton.classList.toggle("element__button-like_active")}isLiked(){return this._likes.some((e=>e._id===this._userId))}}class t{constructor(e){this._popupSelector=e}open(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"==e.key&&this.close()};setEventListeners(){this._popupSelector.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-button"))&&this.close()}))}}class s{constructor(e,t){this._formElement=t.querySelector(e.formSelector),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showError(e){e.classList.add(this._inputErrorClass);const t=this._formElement.querySelector(`${this._inputSelector}-${e.name}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideError(e){e.classList.remove(this._inputErrorClass);const t=this._formElement.querySelector(`${this._inputSelector}-${e.name}-error`);t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputs.some((e=>!e.validity.valid))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListener()}resetValidity(){this._inputs.forEach((e=>{this._hideError(e)}))}_toggleInputError(e){e.validity.valid?this._hideError(e):this._showError(e)}_setEventListener(){this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this.toggleButtonState(),this._toggleInputError(e)}))}))}}class r{constructor(e,t){let{data:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items,this._items.forEach(this._renderer)}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}class o extends t{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupSelector.querySelector(".form"),this._inputList=this._popupSelector.querySelectorAll(".form__input"),this._submitButton=this._form.querySelector(".form__button"),this._submitButtonTextContent=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}close(){super.close(),this._form.reset()}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonTextContent}}const n=document.querySelector(".profile__add-button"),i=document.querySelector(".profile__edit-button"),l=document.querySelector(".profile__avatar"),a=document.querySelector("#popup__profileform"),h=document.querySelector("#popup__addplaceform"),u=document.querySelector("#popup__updateavatar"),_=document.querySelector("#popup__confirm"),c=document.querySelector("#profileform__name"),d=document.querySelector("#profileform__about-me"),m=document.querySelector("#imagepreview"),p={formSelector:".popup__form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},f=new class{constructor(e){this._url=e.baseUrl,this._token=e.token}getInitialCards(){return fetch(`${this._url}/cards`,{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserData(){return fetch(`${this._url}/users/me`,{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e,t){return fetch(`${this._url}/cards`,{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}setUserData(e,t){return console.log(e),fetch(`${this._url}/users/me`,{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addLikes(e){return fetch(`${this._url}/cards/likes/${e}`,{method:"PUT",headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteLikes(e){return fetch(`${this._url}/cards/likes/${e}`,{method:"DELETE",headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}setUserAvatar(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",token:"02d6028b-ac6a-4274-af91-85096bd7453f"}),g=new s(p,h),E=new s(p,u),k=new s(p,a),S=new class extends t{constructor(e){super(e),this._popupImageContent=this._popupSelector.querySelector(".popup__image-content"),this._popupImageHeader=this._popupSelector.querySelector(".popup__image-header")}_rendrePopupImagePreview(){this._popupImageContent.setAttribute("src",`${this.link}`),this._popupImageContent.setAttribute("alt",`Photo of ${this.name}`),this._popupImageHeader.textContent=this.name}open(e){this.name=e.name,this.link=e.link,super.open(),this._rendrePopupImagePreview()}}(m);S.setEventListeners();const L=new class extends t{constructor(e){super(e),this._form=this._popupSelector.querySelector(".form"),this._submitButton=this._form.querySelector(".form__button"),this._submitButtonTextContent=this._submitButton.textContent}setAction(e){this._handleFormSubmit=e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.renderLoading(!0),this._handleFormSubmit(),super.close()})),super.setEventListeners()}renderLoading(e){this._submitButton.textContent=e?"Deleting...":this._submitButtonTextContent}}(_);function v(t,s){const r=new e(t,(e=>{S.open(e)}),(e=>{L.open(),L.setAction((()=>{f.deleteCard(e).then((e=>{r.removeElement()})).catch((e=>{console.log(`Error: ${e}`)})).finally((()=>{L.renderLoading(!1)}))}))}),(e=>{r.isLiked()?f.deleteLikes(e).then((e=>{r.toggleLikeButton(e.likes)})).catch((e=>{console.log(`Error: ${e}`)})):f.addLikes(e).then((e=>{r.toggleLikeButton(e.likes)})).catch((e=>{console.log(`Error: ${e}`)}))}),s);return r.generateCard()}L.setEventListeners();const b=new class{constructor(e,t,s,r){this._profileName=document.querySelector(e),this._profileProfession=document.querySelector(t),this._id=document.querySelector(s),this._image=document.querySelector(r)}getUserInfo(){return{profileName:this._profileName.textContent,profileProfession:this._profileProfession.textContent}}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileProfession.textContent=t,this._id.id=s}setUserImage(e){this._image.src=e}}(".profile__name",".profile__profession",".profile__info",".profile__avatar-image");let y;Promise.all([f.getInitialCards(),f.getUserData()]).then((e=>{let[t,s]=e;b.setUserInfo(s.name,s.about,s._id),b.setUserImage(s.avatar),y=new r({data:t,renderer:e=>{const t=v(e,s);y.appendItem(t)}},".gallery__elements"),y.renderItems()})).catch((e=>{console.log(`Error: ${e}`)}));const C=new o(h,(e=>{const t={name:e.title,link:e["image-link"]};f.addCard(t.name,t.link).then((e=>{const t=v(e,e.owner);y.prependItem(t),C.close()})).catch((e=>{console.log(`Error: ${e}`),C.renderLoading(!1)})).finally((()=>{C.renderLoading(!1)}))})),B=new o(a,(e=>{const t=e.name,s=e["about-me"];f.setUserData(t,s).then((e=>{console.log(e),b.setUserInfo(e.name,e.about,e._id),B.close()})).catch((e=>{console.log(`Error: ${e}`),B.renderLoading(!1)})).finally((()=>{B.renderLoading(!1)}))})),I=new o(u,(e=>{const t=e["image-link"];f.setUserAvatar(t).then((e=>{b.setUserImage(t),I.close()})).catch((e=>{console.log(`Error: ${e}`),I.renderLoading(!1)})).finally((()=>{I.renderLoading(!1)}))}));E.enableValidation(),g.enableValidation(),k.enableValidation(),C.setEventListeners(),B.setEventListeners(),I.setEventListeners(),n.addEventListener("click",(function(){g.toggleButtonState(),g.resetValidity(),C.open()})),i.addEventListener("click",(function(){const e=b.getUserInfo();c.value=e.profileName,d.value=e.profileProfession,k.toggleButtonState(),k.resetValidity(),B.open()})),l.addEventListener("click",(function(){E.toggleButtonState(),E.resetValidity(),I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,